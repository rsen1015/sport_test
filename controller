package com.it.sportsplus.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.google.common.base.Optional;
import com.it.sportsplus.models.Athlete;
import com.it.sportsplus.repo.AthleteRepository;

@RestController
@RequestMapping("/athlete")

public class AthleteController {

	@Autowired
	private AthleteRepository athleterepo;
	
	@PostMapping("/add")
	public Athlete addAthlete(@RequestBody Athlete athletes) {
		Athlete persistedUser=athleterepo.save(athletes);
		return persistedUser;
		
	}
	@GetMapping("/getAll")
		public List<Athlete> getAll()
		{
			List<Athlete> user=athleterepo.findAll();
			return user;
		}
	
	@PutMapping("/update/{id}")
	public ResponseEntity<Object> updateStudent(@RequestBody Athlete athletes, @PathVariable long id) {

		Optional<Athlete> athletesOptional = athleterepo.findById(id);

		if (!athletesOptional.isPresent())
			return ResponseEntity.notFound().build();

		Athlete.setId(id);
		
		athleterepo.save(athletes);

		return ResponseEntity.noContent().build();
	}
	
	@DeleteMapping("/delete/{id}")
	public void deleteAthlete(@PathVariable long id) {
		athleterepo.deleteById(id);
	}
	
	
	
}
